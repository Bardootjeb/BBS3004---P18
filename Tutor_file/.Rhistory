setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
if (!requireNamespace("BiocManager")) {
install.packages("BiocManager")
} else {
message("BiocManager is already installed")
}
# Create vector containing all the packages
packages <- c("DESeq2", "ggplot2", "dplyr", "pheatmap",
"clusterProfiler", "org.Hs.eg.db", "GEOquery")
# Check if required packages is installed; install it if not
if (!requireNamespace(packages)) {
BiocManager::install(packages)
} else {
message("Packages are already installed")
}
source("Project.Functions.R")
require(DESeq2)
require(ggplot2)
require(dplyr)
require(pheatmap)
require(clusterProfiler)
require(org.Hs.eg.db)
require(GEOquery)
FPKM_Data <- read.delim("GSE81089_FPKM_cufflinks.tsv", header=TRUE, row.names=1, sep="\t", check.names = FALSE)
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
# Looking at the head counts to see the type of data inside
head(counts)
gse <- getGEO(GEO = 'GSE81089', GSEMatrix = TRUE)
#Extract metadata using pData function
metadata <- pData(phenoData(gse[[1]]))
# Look at the data inside. Head gives you the first 6
head(metadata)
# I did colnames to see the different colomns
colnames(metadata)
metadata.subset <- metadata[, c(1, 8, 48, 49, 50, 51, 52, 53, 54, 56)]
# Look at the different names
colnames(counts)
metadata.subset <- setNames(metadata.subset, c(
"Title", "Source", "Age", "Life_Status", "Sex", "Histology", "Performance",
"Smoking_Status", "Tumor_stage", "Sample"
)[match(names(metadata.subset), c(
"title", "source_name_ch1", "age:ch1", "dead:ch1", "gender:ch1", "histology:ch1", "ps who:ch1",
"smoking:ch1", "stage tnm:ch1", "tumor (t) or normal (n):ch1"
))])
rownames(metadata.subset) <- metadata.subset$Sample
head(counts)
dim(counts)
counts <- counts[-nrow(counts), ]
# Check if the last row is removed
dim(counts)  # Check new dimensions
# Ensure the output directory exists
if (!dir.exists("Output")) {
dir.create("Output")
}
data <- read.delim("Raw_Counts_GSE81089.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18/Tutor_file")
data <- read.delim("Raw_Counts_GSE81089.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
all(colnames(data) %in% rownames(metadata.subset))
# Find Columns in data That Are Not in metadata.subset
setdiff(colnames(data), rownames(metadata.subset))
# Remove everything after the underscore in data
colnames(data) <- sub("_.*", "", colnames(data))
colnames(data)    #check if it is removed
all(colnames(data) %in% rownames(metadata.subset))
# Check if they are in the same order
all(colnames(data) == rownames(metadata.subset))
metadata.subset <- metadata.subset[match(colnames(data), rownames(metadata.subset)), , drop = FALSE]
# Check if they now match
all(colnames(data) == rownames(metadata.subset))
summary(data)
dds <- DESeqDataSetFromMatrix(countData = data,
colData = metadata.subset,
design = ~ Source)
print(dds)
keep <- rowMeans(counts(dds)) >=10
dds <- dds[keep,]
print(dds)
keep <- rowMeans(data(dds)) >=10
dds$Source <- relevel(dds$Source, ref = "Human non-malignant tissue")
dds <- DESeq(dds)
res <- results(dds)
summary(res)
plotMA(res)
View(res)
