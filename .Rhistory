require(clusterProfiler)
require(org.Hs.eg.db)
require(GEOquery)
#load raw counts
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
df <- read.delim("Significant_DEGs.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
setwd("~/GitHub/BBS3004---P18")
df <- read.delim("Significant_DEGs.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
tmp <- sample(tmp[1], replace = FALSE)
df$GeneExpression <- sample(df$GeneExpression)
df <- read.delim("Significant_DEGs.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
df <- sample(tmp[1], replace = FALSE)
df <- read.delim("Significant_DEGs.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
df <- sample(df[1], replace = FALSE)
df$GeneExpression <- sample(df$GeneExpression)
# Save the modified dataframe (optional)
write.table(df, "Randomized_Significant_DEGs.tsv", sep = "\t", row.names = FALSE, quote = FALSE)
# Print the first few rows to check
head(df)
a <- 1:10
df$GeneExpression
# Read the file
df <- read.delim("Significant_DEGs.tsv", header=TRUE, row.names=1, sep="\t", check.names=FALSE)
# Shuffle the rows of the dataframe
df <- df[sample(nrow(df)), ]
# Shuffle only the GeneExpression column (if needed)
if ("GeneExpression" %in% colnames(df)) {
df$GeneExpression <- sample(df$GeneExpression)
}
# Save the modified dataframe
write.table(df, "Randomized_Significant_DEGs.tsv", sep = "\t", row.names = TRUE, quote = FALSE)
# Print the first few rows to check
head(df)
View(df)
print(df)
# Put it in a file
write.table(df, "Randomized_Significant_DEGs.tsv", sep = "\t", row.names = TRUE, quote = FALSE)
head(df)
# Put it in a file
write.table(df, "Randomized_Significant_DEGs.txt", sep = "\t", row.names = TRUE, quote = FALSE)
head(df)
# Install packages
install.packages("openxlsx")
library(openxlsx)
setwd("~/GitHub/BBS3004---P18")
# Install packages
install.packages("openxlsx")
library(openxlsx)
setwd("~/GitHub/BBS3004---P18")
# Install packages
install.packages("openxlsx")
library(openxlsx)
# Read the file
df <- read.delim("Significant_DEGs.tsv", header=TRUE, row.names=1, sep="\t", check.names=FALSE)
# Shuffle the rows of the dataframe
df <- df[sample(nrow(df)), ]
# Shuffle only the GeneExpression column (if needed)
if ("GeneExpression" %in% colnames(df)) {
df$GeneExpression <- sample(df$GeneExpression)
}
# Save the modified dataframe
write.table(df, "Randomized_Significant_DEGs.tsv", sep = "\t", row.names = TRUE, quote = FALSE)
# Print the first few rows to check
head(df)
# Put it in a file
write.xlsx(df, "Randomized_Significant_DEGs.xlsx", rowNames = TRUE)
setwd("~/GitHub/BBS3004---P18")
# Read the file
df <- read.delim("Significant_DEGs.tsv", header=TRUE, row.names=1, sep="\t", check.names=FALSE)
# Shuffle the rows of the dataframe
df <- df[sample(nrow(df)), ]
# Shuffle only the GeneExpression column (if needed)
if ("GeneExpression" %in% colnames(df)) {
df$GeneExpression <- sample(df$GeneExpression)
}
# Save the modified dataframe
write.table(df, "Randomized_Significant_DEGs.tsv", sep = "\t", row.names = TRUE, quote = FALSE)
# Print the first few rows to check
head(df)
head(df)
# Read the file
df <- read.delim("Significant_DEGs.tsv", header=TRUE, row.names=1, sep="\t", check.names=FALSE)
# Shuffle the rows of the dataframe
df <- df[sample(nrow(df)), ]
# Shuffle only the GeneExpression column (if needed)
if ("GeneExpression" %in% colnames(df)) {
df$GeneExpression <- sample(df$GeneExpression)
}
# Save the modified dataframe
write.table(df, "Randomized_Significant_DEGs.tsv", sep = "\t", row.names = TRUE, quote = FALSE)
# Print the first few rows to check
head(df)
head(df)
View(df)
# Put it in a file
write.csv(df, "Randomized_Significant_DEGs.csv", row.names = TRUE)
