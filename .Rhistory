q()
q()
load("C:/Users/sabya/Downloads/GSE81089_raw_counts_GRCh38.p13_NCBI.tsv.gz")
load("C:/Users/sabya/Downloads/GSE81089_raw_counts_GRCh38.p13_NCBI.tsv.gz")
load("~/.RData")
load("~/.RData")
GSE81089_raw_counts_GRCh38.p13_NCBI.tsv <- read.delim("C:/Users/sabya/Downloads/GSE81089_raw_counts_GRCh38.p13_NCBI.tsv.gz", header=FALSE)
View(GSE81089_raw_counts_GRCh38.p13_NCBI.tsv)
View(GSE81089_raw_counts_GRCh38.p13_NCBI.tsv)
View(GSE81089_raw_counts_GRCh38.p13_NCBI.tsv)
install.packages("DESeq")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("DESeq2", "ggplot2", "dplyr", "pheatmap",
"clusterProfiler", "org.Hs.eg.db", "GEOquery"))
install.packages("readr")  # For reading TSV files
library(DESeq2)
library(ggplot2)
library(dplyr)
library(pheatmap)
library(clusterProfiler)
library(org.Hs.eg.db)
library(GEOquery)
library(readr)  # For reading TSV files
library(readxl) # For reading Excel (XLSX) files
#load raw counts
counts <- read_tsv("GSE81089_raw_counts_GRCh38.p13_NCBI.tsv")
view(counts())
#load metadata
gse <- getGEO(GEO = 'GSE81089', GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))
head(metadata)
colnames(metadata1)
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
View(metadata)
counts <- read_tsv("GSE81089_raw_counts_GRCh38.p13_NCBI.tsv")
setwd("~/GitHub/BBS3004---P18")
counts <- read_tsv("GSE81089_raw_counts_GRCh38.p13_NCBI.tsv")
head(counts)
View(counts)
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
View(metadata)
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
counts <- as.data.frame(counts)  # Convert tibble to a data frame
head(counts)  # Verify if the first column is GeneID
rownames(counts) <- counts[,1]  # Set the first column as row names
counts <- counts[,-1]  # Remove the GeneID column from the data
head(rownames(counts))  # Should display gene IDs
colnames(counts)  # Should display sample names
View(counts)
setdiff(colnames(counts), rownames(metadata))  # Should return character(0)
setdiff(rownames(metadata), colnames(counts))
rownames(counts) <- counts[,1]  # Set first column (GeneID) as row names
View(metadata)
View(counts)
View(metadata)
counts <- as.data.frame(counts)  # Convert tibble to a data frame
head(counts)  # Verify if the first column is GeneID
rownames(counts) <- counts[,1]  # Set the first column as row names
gse <- getGEO(GEO = 'GSE81089', GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))
head(metadata)
gse <- getGEO(GEO = 'GSE81089', GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))
head(metadata)
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
View(metadata)
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
View(metadata)
require(dplyr)
metadata.subset <- select(metadata, c(1,48, 49, 50, 51, 52, 53, 54, 56))
metadata.subset <- metadata[, c(1, 48, 49, 50, 51, 52, 53, 54, 56)]
head(metadata.subset)
View(metadata.subset)
View(metadata.subset)
View(metadata)
View(metadata)
View(counts)
# Source files and data
source("Project.Functions.R")
require(DESeq2)
require(ggplot2)
require(dplyr)
require(pheatmap)
require(clusterProfiler)
require(org.Hs.eg.db)
require(GEOquery)
require(readr)  # For reading TSV files
require(readxl) # For reading Excel (XLSX) files
#load raw counts
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
#load raw counts
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
head(counts)
setwd("~/BBS Year 3/BBS3004 Project/GitHub/BBS3004---P18")
#load raw counts
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
require(readxl) # For reading Excel (XLSX) files
#load raw counts
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
#load raw counts
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
