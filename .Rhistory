setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
source("Project.Functions.R")
require(DESeq2)
require(ggplot2)
require(dplyr)
require(pheatmap)
require(clusterProfiler)
require(org.Hs.eg.db)
require(GEOquery)
if (!requireNamespace("BiocManager")) {
install.packages("BiocManager")
} else {
message("BiocManager is already installed")
}
# Create vector containing all the packages
packages <- c("DESeq2", "ggplot2", "dplyr", "pheatmap",
"clusterProfiler", "org.Hs.eg.db", "GEOquery")
# Check if required packages is installed; install it if not
if (!requireNamespace(packages)) {
BiocManager::install(packages)
} else {
message("Packages are already installed")
}
counts <- read.delim("FPKM_cufflinks.tsv", header=TRUE,
row.names=1, sep="\t", check.names=FALSE)
head(counts)
gse <- getGEO(GEO = 'GSE81089', GSEMatrix = TRUE)
metadata <- pData(phenoData(gse[[1]]))
View(counts)
View(metadata)
head(metadata)
colnames(metadata)
metadata.subset <- metadata[, c(1, 48, 49, 50, 51, 52, 53, 54, 56)]
View(metadata.subset)
rownames(metadata) <- metadata$title
colnames(counts)
metadata.subset <- setNames(metadata.subset, c(
"Title", "Age", "Life_Status", "Sex", "Histology", "Performance",
"Smoking_Status", "Tumor_stage", "Sample"
)[match(names(metadata.subset), c(
"title", "age:ch1", "dead:ch1", "gender:ch1", "histology:ch1", "ps who:ch1",
"smoking:ch1", "stage tnm:ch1", "tumor (t) or normal (n):ch1"
))])
dead <- metadata.subset[, 3]
paste(dead)
head(counts)
dim(counts)
counts <- counts[-nrow(counts), ]
dim(counts)
head(counts)
dim(counts)
counts <- counts[-nrow(counts), ]
dim(counts)
if (!dir.exists("Output")) {
dir.create("Output")
}
head(colnames(counts))
dds <- DESeqDataSetFromMatrix(countData = counts_data,
colData = col_data,
design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = col_data,
design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = metadata.subset,
design = ~ condition)
all(colnames(counts) %in% rownames(metadata.subset))
# Looking at the head counts to see the type of data inside
head(counts)
