setwd("~/")
setwd("~/")
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
install.packages("ggplot2")
install.packages("dplyr")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
counts_matrix <- read.table("counts_matrix.tsv", header = TRUE, row.names = 1, sep = "\t")
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
dim(counts_matrix)   # Check dimensions
ls()
ls()  # Lists all loaded variables in your environment
ls()
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
> ls()
ls()
dim(counts_matrix)   # Check dimensions
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18")
head(count_matrix)
head(count_matrix)
head(count_matrix)
file.exists("~/Documents/uni/Year 3/bbs3004/BBS3004---P18/rawcounts.tsv")
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18/")
head(count_matrix)
head (count_matrix)
count_matrix <- read.table("~/Documents/uni/Year 3/bbs3004/BBS3004---P18/rawcounts.tsv", header = TRUE, row.names = 1, sep = "\t")
head (count_matrix)
head(metadata)
metadata <- read.table("~/Documents/uni/Year 3/bbs3004/BBS3004---P18/rawcounts.tsv", header = TRUE, row.names = 1, sep = "\t")
head(metadata)
metadata$Condition <- factor(metadata$Condition, levels = c("Control", "Treatment"))
dim(metadata)
rownames(metadata)
colnames(count_matrix)
metadata$Condition
colnames(metadata)
colnames(metadata)[colnames(metadata) == "wrong_column_name"] <- "Condition"
metadata$Condition <- factor(metadata$Condition, levels = c("Control", "Treatment"))
library(DESeq2)
str(counts)
dds <- DESeqDataSetFromMatrix(
countData = counts,
colData = metadata,
design = ~ 1
dds
dds
dds <- DESeqDataSetFromMatrix(
countData = counts,
colData = metadata,
design = ~ 1
dds
getwd()
list.files()
setwd("~/Documents/uni/Year 3/bbs3004/BBS3004---P18/Code Practice/Coding practical")
list.files()
x <- 10
y <- 3.14159
dim(counts)       # Should return (genes, samples)
head(counts)      # Look at the first few rows
str(counts)       # Should be a numeric matrix or dataframe
ls()
str(count_matrix)
dds <- DESeqDataSetFromMatrix(
countData = count_matrix,  # Use the correct variable name
colData = metadata,
design = ~ 1
dds
dim(count_matrix)
ls()
dds
dds <- DESeqDataSetFromMatrix(
countData = count_matrix,  # Use the correct variable name
colData = metadata,
design = ~ 1  # Change to ~ Condition if applicable
)
dds <- DESeqDataSetFromMatrix(
countData = count_matrix,  # Use the correct variable name
colData = metadata,
design = ~ 1  # Change to ~ Condition if applicable
)
dds <- DESeqDataSetFromMatrix(
countData = count_matrix,  # Use the correct variable name
colData = metadata,
design = ~ 1)
dim(count_matrix)
dim(metadata)
colnames(count_matrix)
rownames(metadata)
head(metadata)
rownames(metadata) <- metadata$GeneID  # Replace 'SampleID' with the actual column name
metadata$GeneID <- NULL  # Remove the column if it's no longer needed
rownames(metadata)
all(colnames(count_matrix) %in% rownames(metadata))  # Should return TRUE
rownames(metadata) <- colnames(count_matrix)
