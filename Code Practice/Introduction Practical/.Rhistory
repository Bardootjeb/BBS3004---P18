for(i in 1:10){
cat(paste(i, i^2, sep='\t'), '\n')
}
f2 <- function(x){
sort(x)[ length(x) / 2 ]
}
f2(10)
f2(200)
f2(200:500)
f2(1:10)
f2 <- function(x){
length(x) / 2 ]
f2 <- function(x){
length(x) / 2 ]
f2 <- function(x){
length(x) / 2
}
f2(1:10)
f2(200:500)
a <- 200:500
a
sort(a)
sort(a)/2
average(sort(a)/2)
mean(sort(a)/2)
mean(a/2)
setwd("~/NORD Universitet/BI229F - Genomics and Bioinformatics/First practical")
getwd()
list.files()
x <- 10
y <- 3.14159
x + y
x * y
x / y
x^2 * y
z <- x^2 * y
ac <- 6.022045e23
ac
ac <- 6.022045 * 10^23
0xA
0xB
0xG
0xF
0xFF
0x11
0x1F
16 * 16
16 * 16 * 16 * 16
0xFFFF
0xF + 1
sqrt(0xF + 1)
sqrt(0xFF + 1)
sqrt(0xFFFF + 1)
log2(0xF+1)
log2(0xFF+1)
a <- 0x100
b <- 0x50
pc <- 6.26*10^-34
0x10
0x100
0x10
0xFFFFFFFF
a
0xFFFFFFFF
2^32
2^32 / 16
2L %/% 2L
is.integer( 2L %/% 2L )
is.integer( 2L %/% 2 )
2L %/% 2
8 == 8
x <- 256L
x <- x * x * x
x
is.integer(x)
is.integer(x * 256)
2^8
2^32
2^33
2^32
2*10^9
2^32 /2
2^64
2^64 /2
2^64 > 1
2^32 < 2*10^9
2^32 /2 < 2*10^9
x <- 1:10
x[1] <- 100
x
x[5:6] <- 2
x
x[5:6] <- c(-10, 3)
x
## but
x[5] <- c(-10, 3)
## read the error message!!
## with logical vectors
## make sure that no values are bigger than 6
y <- x > 6
y
x[y] <- 6
x
## and remove all negative values:
x[ x < 0 ] <- 0
df2 <- data.frame('nums'=1:4, 'letters'=c('a', 'b', 'c', 'd'), stringsAsFactors=TRUE)
class(df2$letters)
df2 <- data.frame('nums'=1:4, 'letters'=c('a', 'b', 'c', 'd'), stringsAsFactors=FALSE)
## then check..
class(df2$letters)
dim(dr.genes)
dr.genes <- read.table("dr_genes.tsv", header=TRUE, sep="\t", quote="", stringsAsFactors=FALSE)
dr.exons <- read.table("dr_exons.tsv", header=TRUE, sep="\t", quote="", stringsAsFactors=FALSE)
dim(dr.genes)
dim(dr.exons)
nrow(dr.exons) / nrow(dr.genes)
length(unique( dr.exons$transcript_id ))
?dim
d <- c(1:2, "two", "three")
D
d
class(d)
2^8
2^16
2^32
2^32/2
